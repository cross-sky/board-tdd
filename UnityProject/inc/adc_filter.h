#ifndef __ADC_FILTER_H
#define __ADC_FILTER_H

//@@@@@@@@@@@ 需要校正
/*
***************************************************************************************************
*                                       ntc对应采样电压值数组
*--------------------------------------------------------------------------------------------------
* 注释第一行：对应温度
*--------------------------------------------------------------------------------------------------
* 测量温度范围定为-10℃-150℃(可能会有零点几的数据出入)
***************************************************************************************************
*/
const static uint16_t ntc_adc[]={
	4018,   3990,   3961,   3932,   3901,   3869,   3836,   3802,
	3767,   3731,   3694,   3656,   3617,   3577,   3536,   3494,   
	3451,   3407,   3363,   3318,   3271,   3225,   3177,   3129,   
	3080,   3031,   2981,   2931,   2881,   2830,   2779,   2728,   
	2676,   2625,   2573,   2522,   2470,   2419,   2368,   2317,   
	2267,   2216,   2167,   2117,   2068,   2020,   1972,   1925,   
	1878,   1832,   1787,   1742,   1698,   1655,   1612,   1571,   
	1530,   1490,   1450,   1412,   1374,   1337,   1301,   1265,   
	1231,   1197,   1164,   1132,   1101,   1070,   1040,   1011,   
	983,    956,    929,    903,    877,    853,    829,    805,   
	783,    761,    739,    718,    698,    678,    659,    641,   
	623,    605,    588,    572,    556,    541,    526,    511,   
	497,    483,    470,    457,    444,    432,    420,    409,   
	398,    387,    377,    367,    357,    347,    338,    329,   
	320,    312,    304,    296,    288,    280,    273,    266,   
	259,    253,    246,    240,    234,    228,    222,    217,   
	211,    206,    201,    196,    191,    186,    182,    177,   
	173,    169,    165,    161,    157,    153,    150,    146,   
	143,    139,    136,    133,    130,    127,    124,    121,   
	119,    116,    113,    111,    108,    106,    103,    101,   
	99,     97,     95,     93,     91,     89,     87,     85,   
	83,     81,     80
};

//-20 - +80
static const uint16_t	ntcAdc10K[]={
	389	,	409	,	431	,	453	,	476	,	500	,	525	,
	550	,	577	,	604	,	632	,	662	,	692	,	723	,
	755	,	787	,	821	,	855	,	891	,	927	,	964	,
	1001,	1040,	1079,	1119,	1160,	1201,	1242,
	1285,	1328,	1371,	1415,	1459,	1504,	1548,
	1593,	1639,	1684,	1730,	1775,	1821,	1867,
	1912,	1958,	2003,	2048,	2093,	2137,	2182,
	2225,	2269,	2312,	2354,	2396,	2438,	2479,
	2519,	2559,	2598,	2636,	2674,	2711,	2748,
	2784,	2819,	2853,	2887,	2920,	2952,	2984,
	3015,	3045,	3074,	3103,	3131,	3158,	3185,
	3211,	3236,	3261,	3285,	3308,	3331,	3353,
	3374,	3395,	3415,	3435,	3454,	3473,	3491,
	3508,	3525,	3542,	3558,	3574,	3589,	3603,
	3618,	3631,	3645				
};

#define ADC10K_ARRAY_NUM	(sizeof(ntcAdc10K)/sizeof(uint16_t))
#define ADC10K_INDEX_MAX			(ADC10K_ARRAY_NUM-1)	// 数组下标的最大可用取值，对应 80℃采样值下标
#define ADC10K_INDEX_MIN			(1)						//数组下标的最小可用取值，对应-10℃采样值下标
#define ADC10K_TEMPER_REF			(-20)					//温度基准点，即下标为0时对应的温度
#define ADC10K_TEMP_LAST			80						//温度最后值，即数组最后一个对应的温度

//-20 - +120 2k基准电阻
static const uint16_t	ntcAdc10KV2[]={
	84,		89,		94,		 99,	105,	111,	117,
	123,	130,	137,	144,	152,	160,	168,
	177,	186,	196,	205,	216,	226,	237,
	249,	261,	273,	286,	300,	314,	328,
	343,	359,	374,	391,	408,	426,	444,
	463,	482,	502,	522,	544,	565,	588,
	610,	634,	658,	683,	708,	734,	760,
	787,	815,	843,	872,	901,	931,	961,
	992,	1023,	1055,	1087,	1120,	1153,	1186,
	1220,	1254,	1289,	1324,	1359,	1395,	1430,
	1466,	1502,	1539,	1575,	1612,	1649,	1685,
	1722,	1759,	1796,	1833,	1869,	1906,	1943,
	1979,	2016,	2052,	2088,	2123,	2159,	2194,
	2229,	2264,	2298,	2333,	2366,	2400,	2433,
	2466,	2498,	2526,	2558,	2588,	2619,	2649,
	2678,	2707,	2735,	2763,	2790,	2817,	2843,
	2869,	2895,	2920,	2945,	2970,	2993,	3017,
	3040,	3063,	3085,	3106,	3127,	3148,	3168,
	3188,	3208,	3228,	3247,	3266,	3285,	3303,
	3321,	3338,	3356,	3373,	3389,	3406,	3421,
	3437						
				
};

#define ADC10KV2_ARRAY_NUM	(sizeof(ntcAdc10KV2)/sizeof(uint16_t))
#define ADC10KV2_INDEX_MAX			(ADC10KV2_ARRAY_NUM-1)	// 数组下标的最大可用取值，对应 80℃采样值下标
#define ADC10KV2_INDEX_MIN			(1)						//数组下标的最小可用取值，对应-10℃采样值下标
#define ADC10KV2_TEMPER_REF			(-20)					//温度基准点，即下标为0时对应的温度
#define ADC10KV2_TEMP_LAST			120						//温度最后值，即数组最后一个对应的温度


//0 - + 130
static const uint16_t	ntcAdc50K[]={
	237	,	237	,	248	,	261	,	273	,	286	,	299	,
	313	,	328	,	343	,	358	,	374	,	391	,	408	,
	426	,	444	,	463	,	482	,	502	,	522	,	544	,
	565	,	588	,	610	,	634	,	658	,	683	,	708	,
	734	,	760	,	787	,	815	,	843	,	872	,	901	,
	930	,	961	,	992	,	1023,	1055,	1087,	1119,
	1152,	1186,	1220,	1254,	1289,	1324,	1359,
	1394,	1430,	1466,	1502,	1538,	1575,	1612,
	1648,	1685,	1722,	1759,	1796,	1833,	1870,
	1907,	1943,	1980,	2016,	2053,	2089,	2125,
	2160,	2196,	2231,	2266,	2301,	2335,	2369,
	2403,	2436,	2469,	2502,	2534,	2565,	2597,
	2628,	2658,	2688,	2718,	2747,	2776,	2804,
	2832,	2859,	2886,	2913,	2939,	2964,	2989,
	3014,	3038,	3062,	3085,	3108,	3130,	3152,
	3174,	3195,	3215,	3235,	3255,	3274,	3293,
	3312,	3330,	3347,	3365,	3381,	3398,	3414,
	3430,	3445,	3460,	3475,	3489,	3504,	3517,
	3531,	3544,	3556,	3569,	3581,	3593	

};

#define ADC50K_ARRAY_NUM	(sizeof(ntcAdc50K)/sizeof(uint16_t))
#define ADC50K_INDEX_MAX			(ADC50K_ARRAY_NUM-1)	// 数组下标的最大可用取值，对应 80℃采样值下标
#define ADC50K_INDEX_MIN			(1)						//数组下标的最小可用取值，对应-10℃采样值下标
#define ADC50K_TEMPER_REF			(0)					//温度基准点，即下标为0时对应的温度
#define ADC50K_TEMP_LAST			130						//温度最后值，即数组最后一个对应的温度



#define NTC_ADC_ARRAY_NUM (sizeof(ntc_adc)/sizeof(uint16_t))
#define INDEX_MAX			(NTC_ADC_ARRAY_NUM-3)	// 数组下标的最大可用取值，对应 80℃采样值下标
#define INDEX_MIN			(3)						//数组下标的最小可用取值，对应-10℃采样值下标
#define TEMPER_REF			(-15)					//温度基准点，即下标为0时对应的温度
#define TEMP_LAST			155						//温度最后值，即数组最后一个对应的温度

int16_t iADCTemperCalc(uint16_t index,uint16_t adcValue);
uint16_t uADCSearchData(uint16_t searchValue);

uint16_t uADCSearchData10K(uint16_t searchValue);
int16_t iADCTemperCalc10K(uint16_t index,uint16_t adcValue);

uint16_t uADCSearchData10KV2(uint16_t searchValue);
int16_t iADCTemperCalc10KV2(uint16_t index,uint16_t adcValue);

uint16_t uADCSearchData50K(uint16_t searchValue);
int16_t iADCTemperCalc50K(uint16_t index,uint16_t adcValue);

#endif

